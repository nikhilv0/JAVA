package com.xworkz.stream.lambda;

import com.xworkz.stream.country.Countries;
import com.xworkz.stream.country.CountriesImp;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.function.Function;
import java.util.stream.Collectors;

public class Main  {

    public static void main(String[] args) {

    Collection<String> countries1 = new ArrayList<>();
        countries1.add("CountryName");

        countries1.add("India");
        countries1.add("Australia");
        countries1.add("England");
        countries1.add("Pakistan");
        countries1.add("China");
        countries1.add("Brazil");
        countries1.add("United States of America");
        countries1.add("Russia");
        countries1.add("Germany");
        countries1.add("France");
        countries1.add("Japan");
        countries1.add("Italy");
        countries1.add("Canada");
        countries1.add("South Korea");
        countries1.add("Mexico");
        countries1.add("Indonesia");
        countries1.add("Spain");
        countries1.add("Turkey");
        countries1.add("Saudi Arabia");
        countries1.add("South Africa");
        countries1.add("Argentina");
        countries1.add("Nigeria");
        countries1.add("Vietnam");
        countries1.add("Thailand");
        countries1.add("Philippines");
        countries1.add("Malaysia");
        countries1.add("Singapore");
        countries1.add("Bangladesh");
        countries1.add("Egypt");
        countries1.add("Iran");
        countries1.add("Iraq");
        countries1.add("Ukraine");
        countries1.add("Poland");
        countries1.add("Netherlands");
        countries1.add("Belgium");
        countries1.add("Sweden");
        countries1.add("Switzerland");
        countries1.add("Norway");
        countries1.add("Denmark");
        countries1.add("Finland");
        countries1.add("Austria");
        countries1.add("Ireland");
        countries1.add("Greece");
        countries1.add("Portugal");
        countries1.add("Czech Republic (Czechia)");
        countries1.add("Hungary");
        countries1.add("Romania");
        countries1.add("Bulgaria");
        countries1.add("Croatia");
        countries1.add("Slovakia");
        countries1.add("Slovenia");
        countries1.add("Serbia");
        countries1.add("Bosnia and Herzegovina");
        countries1.add("North Macedonia (formerly Macedonia)");
        countries1.add("Albania");
        countries1.add("Montenegro");
        countries1.add("Kosovo");
        countries1.add("Lithuania");
        countries1.add("Latvia");
        countries1.add("Estonia");
        countries1.add("Belarus");
        countries1.add("Georgia");
        countries1.add("Armenia");
        countries1.add("Azerbaijan");
        countries1.add("Kazakhstan");
        countries1.add("Uzbekistan");
        countries1.add("Turkmenistan");
        countries1.add("Kyrgyzstan");
        countries1.add("Tajikistan");
        countries1.add("Afghanistan");
        countries1.add("Nepal");
        countries1.add("Bhutan");
        countries1.add("Sri Lanka");
        countries1.add("Maldives");
        countries1.add("Myanmar (formerly Burma)");
        countries1.add("Laos");
        countries1.add("Cambodia");
        countries1.add("Brunei");
        countries1.add("East Timor (Timor-Leste)");
        countries1.add("Mongolia");
        countries1.add("North Korea");
        countries1.add("Palestine State");
        countries1.add("Israel");
        countries1.add("Jordan");
        countries1.add("Lebanon");
        countries1.add("Syria");
        countries1.add("Oman");
        countries1.add("Yemen");
        countries1.add("United Arab Emirates");
        countries1.add("Qatar");
        countries1.add("Kuwait");
        countries1.add("Bahrain");
        countries1.add("Vatican City");
        countries1.add("Andorra");
        countries1.add("Monaco");
        countries1.add("San Marino");
        countries1.add("Liechtenstein");
        countries1.add("Luxembourg");
        countries1.add("Iceland");
        countries1.add("Malta");
        countries1.add("Cyprus");
        countries1.add("Morocco");
        countries1.add("Algeria");
        countries1.add("Tunisia");
        countries1.add("Libya");
        countries1.add("Sudan");
        countries1.add("South Sudan");
        countries1.add("Ethiopia");
        countries1.add("Eritrea");
        countries1.add("Djibouti");
        countries1.add("Somalia");
        countries1.add("Kenya");
        countries1.add("Tanzania");
        countries1.add("Uganda");
        countries1.add("Rwanda");
        countries1.add("Burundi");
        countries1.add("Democratic Republic of the Congo");
        countries1.add("Republic of the Congo");
        countries1.add("Gabon");
        countries1.add("Equatorial Guinea");
        countries1.add("Central African Republic");
        countries1.add("Cameroon");
        countries1.add("Chad");
        countries1.add("Niger");
        countries1.add("Mali");
        countries1.add("Mauritania");
        countries1.add("Senegal");
        countries1.add("Gambia");
        countries1.add("Guinea");
        countries1.add("Guinea-Bissau");
        countries1.add("Sierra Leone");
        countries1.add("Liberia");
        countries1.add("Ivory Coast");
        countries1.add("Ghana");
        countries1.add("Togo");
        countries1.add("Benin");
        countries1.add("Burkina Faso");
        countries1.add("Nigeria");
        countries1.add("Zambia");
        countries1.add("Malawi");
        countries1.add("Mozambique");
        countries1.add("Zimbabwe");
        countries1.add("Botswana");
        countries1.add("Namibia");
        countries1.add("Angola");
        countries1.add("South Africa");
        countries1.add("Lesotho");
        countries1.add("Eswatini (fmr. \"Swaziland\")");
        countries1.add("Madagascar");
        countries1.add("Seychelles");
        countries1.add("Mauritius");
        countries1.add("Comoros");
        countries1.add("Cape Verde");
        countries1.add("Sao Tome and Principe");
        countries1.add("Equatorial Guinea");
        countries1.add("New Zealand");
        countries1.add("Fiji");
        countries1.add("Papua New Guinea");
        countries1.add("Solomon Islands");
        countries1.add("Vanuatu");
        countries1.add("Samoa");
        countries1.add("Tonga");
        countries1.add("Kiribati");
        countries1.add("Tuvalu");
        countries1.add("Nauru");
        countries1.add("Palau");
        countries1.add("Micronesia");
        countries1.add("Marshall Islands");
        countries1.add("Antigua and Barbuda");
        countries1.add("Bahamas");
        countries1.add("Barbados");
        countries1.add("Belize");
        countries1.add("Cuba");
        countries1.add("Dominica");
        countries1.add("Dominican Republic");
        countries1.add("Grenada");
        countries1.add("Haiti");
        countries1.add("Jamaica");
        countries1.add("Saint Kitts and Nevis");
        countries1.add("Saint Lucia");
        countries1.add("Saint Vincent and the Grenadines");
        countries1.add("Trinidad and Tobago");
        countries1.add("Panama");
        countries1.add("Costa Rica");
        countries1.add("Nicaragua");
        countries1.add("Honduras");
        countries1.add("El Salvador");
        countries1.add("Guatemala");
        countries1.add("Colombia");
        countries1.add("Venezuela");
        countries1.add("Ecuador");
        countries1.add("Peru");
        countries1.add("Bolivia");
        countries1.add("Paraguay");
        countries1.add("Chile");
        countries1.add("Uruguay");
        countries1.add("Suriname");
        countries1.add("Guyana");
        countries1.add("me");


//        CountriesImp countriesImp=new CountriesImp();
//        countriesImp.use((c)->{
//            if (c.equals("bhbh"))return c;
//            return null;
//        });
//
        countries1.forEach((e)-> System.out.println(e));
        System.out.println("____________________________________________________________________________________________");
        countries1.stream().filter((c)->c.toLowerCase().startsWith("i")).forEach((c)-> System.out.println(c));
        System.out.println("____________________________________________________________________________________________");
        countries1.stream().filter((e)->e.toLowerCase().startsWith("g")).forEach((b)-> System.out.println(b));
        System.out.println("____________________________________________________________________________________________");
        countries1.stream().filter((f)->f.toLowerCase().endsWith("a")).forEach((g)-> System.out.println(g));
        System.out.println("____________________________________________________________________________________________");
        countries1.stream().sorted().forEach((e)-> System.out.println(e));
        System.out.println("____________________________________________________________________________________________");
        countries1.stream().sorted(Comparator.reverseOrder()).forEach((e)-> System.out.println(e));
        System.out.println("____________________________________________________________________________________________");
        countries1.stream().filter((e)->e.toLowerCase().contains("o")).forEach((e)-> System.out.println(e));
        System.out.println("____________________________________________________________________________________________");
        countries1.stream().filter((c)-> c.length()>6).forEach((e)-> System.out.println(e));
        System.out.println("____________________________________________________________________________________________");
        countries1.stream().filter((e)->e.length()<4).forEach((e)-> System.out.println(e));
        System.out.println("____________________________________________________________________________________________");
        countries1.stream().collect(Collectors.groupingBy(Function.identity())).forEach((e,list)-> System.out.println(e));
        System.out.println("____________________________________________________________________________________________");
        countries1.stream().map((e)->new StringBuilder(e).reverse()).forEach((e)-> System.out.println(e));
        System.out.println("____________________________________________________________________________________________");
        countries1.forEach((e)-> System.out.println(e+" :"+e.length()));
        System.out.println("____________________________________________________________________________________________");
        countries1.stream().filter(e -> e.equalsIgnoreCase(new StringBuilder(e).reverse().toString())).forEach(System.out::println);


    }

}
